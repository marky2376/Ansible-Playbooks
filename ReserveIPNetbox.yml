--- 
- name: "Reserve IP(s)"
  connection: local
  hosts: localhost
  gather_facts: False
  
  vars:
    location: "{{ LOCATION }}"
    c_description: "{{CIRCUIT_DESC}}"
    prefix_length: "{{PREFIX}}"
  
  tasks:
  
    - name: Get a new available IP inside MGMT vlan 2002
      netbox.netbox.netbox_ip_address:
        netbox_url: http://netbox.truvista.net:8085
        validate_certs: False
        netbox_token: 9a9f4b51cfa1fc1f3501cb28fd8b86b64aef05f2
        data:
          prefix: 172.18.0.0/22
          description: "{{ c_description }}"
        state: new
      register: mgmt_address
      when: location == "MGMT"
      
      
    - name: Get a new prefix when circuit is South Carolina
      netbox.netbox.netbox_ip_address:
        netbox_url: http://netbox.truvista.net:8085
        validate_certs: False
        netbox_token: 9a9f4b51cfa1fc1f3501cb28fd8b86b64aef05f2
        data:
          parent: "206.74.207.0/24"
          prefix_length: "{{ prefix_length }}"
          description: "{{ c_description }}"
        state: new
        first_available: yes
      register: prefix
      when: location == "South_Carolina"
      
      
    - name: Get a new prefix when circuit is Georgia
      netbox.netbox.netbox_ip_address:
        netbox_url: http://netbox.truvista.net:8085
        validate_certs: False
        netbox_token: 9a9f4b51cfa1fc1f3501cb28fd8b86b64aef05f2
        data:
          parent: "192.96.63.0/24"
          prefix_length: "{{ prefix_length }}"
          description: "{{ c_description }}"
        state: new
        first_available: yes
      register: prefix
      when: location == "Georgia"
      
    - name: Print and Store MGMT IP
      set_fact:
        ip_address: "{{ mgmt_address.stdout | regex_search(.*ip_address.*,'\\1') | first }}"
      debug:
        var: ip_address
      
    - name: "Print IP"
      debug:
        msg: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses',  api_filter='description=' ~ c_description, api_endpoint='http://netbox.truvista.net:8085', token='9a9f4b51cfa1fc1f3501cb28fd8b86b64aef05f2', validate_certs='False') }}"

